CREATE TABLE TaskEntity(
    id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE,
    title TEXT NOT NULL,
    isDone INTEGER AS Boolean DEFAULT 0 NOT NULL,
    date INTEGER,
    time INTEGER,
    created INTEGER NOT NULL,
    updated INTEGER NOT NULL,
    listId INTEGER,
    isInMyDay INTEGER AS Boolean DEFAULT 0 NOT NULL,
    isDeleted INTEGER AS Boolean DEFAULT 0 NOT NULL,
    isFavorite INTEGER AS Boolean DEFAULT 0 NOT NULL,
    FOREIGN KEY (listId) REFERENCES TaskListEntity(id) ON DELETE CASCADE
);

insertTask:
INSERT INTO TaskEntity
VALUES (?,?,?,?,?,?,?,?,?,?,?);

updateTask:
REPLACE INTO TaskEntity
VALUES (?,?,?,?,?,?,?,?,?,?,?);

deleteTask:
DELETE FROM TaskEntity
WHERE id = ?;

getTask:
SELECT * FROM TaskEntity
LEFT OUTER JOIN TaskListEntity
ON TaskEntity.listId == TaskListEntity.id
WHERE TaskEntity.id = ?;

getTasks:
SELECT * FROM TaskEntity
LEFT OUTER JOIN TaskListEntity
ON TaskEntity.listId == TaskListEntity.id
WHERE listId = ? AND isDeleted = ?;

getTasksForToday:
SELECT * FROM TaskEntity
LEFT OUTER JOIN TaskListEntity
ON TaskEntity.listId == TaskListEntity.id
WHERE (isInMyDay = ? OR date = ?) AND isDeleted = ?;

getFavoriteTasks:
SELECT * FROM TaskEntity
LEFT OUTER JOIN TaskListEntity
ON TaskEntity.listId == TaskListEntity.id
WHERE isFavorite = ? AND isDeleted = ?;

getDeletedTasks:
SELECT * FROM TaskEntity
LEFT OUTER JOIN TaskListEntity
ON TaskEntity.listId == TaskListEntity.id
WHERE isDeleted = ?;

getAllTasks:
SELECT * FROM TaskEntity
LEFT OUTER JOIN TaskListEntity
ON TaskEntity.listId == TaskListEntity.id;

CREATE TABLE TaskListEntity (
    id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE,
    title TEXT NOT NULL
);

editTaskList:
INSERT OR REPLACE INTO TaskListEntity
VALUES (?,?);

deleteTaskList:
DELETE FROM TaskListEntity
WHERE id = ?;

getTaskList:
SELECT * FROM TaskListEntity
WHERE id = ?;

getAllTaskLists:
SELECT * FROM TaskListEntity;
